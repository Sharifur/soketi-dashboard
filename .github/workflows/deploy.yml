name: 🚀 Deploy Soketi Dashboard

on:
  push:
    branches: [ production ]

env:
  PHP_VERSION: '8.2'
  NODE_VERSION: '20'

jobs:
  build-assets:
    name: 🎨 Build Frontend Assets
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build assets for production
        run: npm run build

      - name: 📤 Upload built assets
        uses: actions/upload-artifact@v4
        with:
          name: built-assets
          path: public/build/
          retention-days: 1

  deploy-production:
    name: 🌟 Deploy to Production
    runs-on: ubuntu-latest
    needs: build-assets
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'
    environment: production

    steps:
      - name: 📥 Download built assets
        uses: actions/download-artifact@v4
        with:
          name: built-assets
          path: public/build/

      - name: 🚀 Deploy to production server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USERNAME }}
          password: ${{ secrets.PRODUCTION_PASSWORD }}
          port: ${{ secrets.PRODUCTION_PORT || 22 }}
          script: |
            echo "🌟 Starting Soketi Dashboard deployment to production..."

            # Navigate to application directory
            cd ${{ secrets.PRODUCTION_APP_PATH || '/var/www/soketi-dashboard' }}

            # Create backup
            BACKUP_DIR="../backups/$(date +%Y%m%d-%H%M%S)"
            mkdir -p ../backups
            cp -r . "$BACKUP_DIR"
            echo "✅ Backup created at $BACKUP_DIR"

            # Enable maintenance mode
            php artisan down --message="Deploying..." --retry=60

            # Pull latest changes
            git fetch origin
            git reset --hard origin/production

            # Install/update dependencies
            composer install --no-dev --optimize-autoloader --no-interaction

            # Clear caches
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            # Run migrations
            php artisan migrate --force

            # Optimize for production
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            # Update file permissions
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 755 storage bootstrap/cache

            # Restart services
            sudo systemctl reload nginx
            sudo systemctl reload php8.2-fpm

            # Simple health check
            sleep 3
            if curl -f -s http://localhost > /dev/null; then
              echo "✅ Health check passed"
            else
              echo "❌ Health check failed"
            fi

            # Disable maintenance mode
            php artisan up

            # Clean old backups (keep last 3)
            cd ../backups
            ls -1t | tail -n +4 | xargs -r rm -rf

            echo "🎉 Production deployment completed!"

  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    needs: deploy-production
    if: always()

    steps:
      - name: 🗑️ Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: built-assets
          failOnError: false
